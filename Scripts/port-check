#!/bin/sh -e

##########################################################################
#   Synopsis:
#       port-check
#       
#   Description:
#       .B port-check
#       runs portlint(1) in the current working directory, and then
#       cleans, rebuilds, and reinstalls the port for testing.
#       It sets DEVELOPER=yes in /etc/make.conf if it is not already
#       set, to ensure that stage QA measures are run.
#       
#   Arguments:
#       None
#       
#   Returns:
#       0 on success, non-zero error codes otherwise
#
#   See also:
#       port-create(1), port-diff(1), port-mkpatch(1), port-patch-edit(1)
#       port-remake(1), port-reinstall(1), port-restage(1)
##########################################################################

usage()
{
    printf "Usage: $0\n"
    exit 64     # sysexits(3) EX_USAGE
}


##########################################################################
#   Function description:
#       Pause until user presses return
##########################################################################

pause()
{
    local junk
    
    printf "Press return to continue..."
    read junk
}


##########################################################################
#   Main
##########################################################################

if [ $# != 0 ]; then
    usage
fi

if ! grep -q '^DEVELOPER=' /etc/make.conf; then
    printf 'DEVELOPER=yes\n' >> /etc/make.conf
fi

: ${PORTSDIR:=/usr/ports}
if [ $# = 1 ]; then
    cd $PORTSDIR/$1
fi

printf "Remove distfile? y/[n] "
read distclean
if [ 0$distclean = 0y ]; then
    make distclean
else
    make clean
fi
if ! portlint -AC; then
    read -p 'Continue? y/[n] ' continue
    if [ 0$continue != 0y ]; then
	exit
    fi
else
    pause
fi
make deinstall
make rmconfig
make reinstall
make check-plist
make stage-qa
read -p "Clean? y/[n] " clean
if [ 0$clean = 0y ]; then
    make clean
fi
